name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

       - name: Set up Go
         uses: actions/setup-go@v6
         with:
           go-version: '1.24.7'
           cache: true

      - name: Get version from tag
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "version=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Build multi-platform binaries
        run: |
          mkdir -p dist
          VERSION="${{ steps.version.outputs.version }}"
          COMMIT=$(git rev-parse HEAD)
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          LDFLAGS="-ldflags \"-X 'github.com/rshade/pulumicost-core/pkg/version.version=${VERSION}' -X 'github.com/rshade/pulumicost-core/pkg/version.gitCommit=${COMMIT}' -X 'github.com/rshade/pulumicost-core/pkg/version.buildDate=${BUILD_DATE}'\""

          # Build for different platforms
          platforms=(
            "linux/amd64"
            "linux/arm64"
            "darwin/amd64"
            "darwin/arm64"
            "windows/amd64"
          )

          for platform in "${platforms[@]}"; do
            GOOS=${platform%/*}
            GOARCH=${platform#*/}
            BINARY_NAME="pulumicost-v${VERSION}-${GOOS}-${GOARCH}"
            
            if [ "${GOOS}" = "windows" ]; then
              BINARY_NAME="${BINARY_NAME}.exe"
            fi
            
            echo "Building ${BINARY_NAME}..."
            env GOOS=${GOOS} GOARCH=${GOARCH} eval go build ${LDFLAGS} -o dist/${BINARY_NAME} ./cmd/pulumicost
          done

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > checksums.txt
          cat checksums.txt

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag for changelog generation
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "Generating changelog from ${PREVIOUS_TAG} to ${{ steps.version.outputs.tag }}"
            CHANGELOG=$(git log ${PREVIOUS_TAG}..${{ steps.version.outputs.tag }} --pretty=format:"- %s (%h)" --no-merges)
          else
            echo "No previous tag found, generating changelog from first commit"
            CHANGELOG=$(git log ${{ steps.version.outputs.tag }} --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Save changelog to output
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: PulumiCost Core ${{ steps.version.outputs.tag }}
          body: |
            ## What's Changed
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Download
            
            Download the appropriate binary for your platform from the assets below.
            
            ### Verification
            
            All binaries include checksums provided in `checksums.txt`.
            
            ```bash
            # Verify checksum (example for Linux amd64)
            sha256sum -c checksums.txt --ignore-missing
            ```
          files: |
            dist/*
          draft: false
          prerelease: ${{ contains(steps.version.outputs.tag, '-') }}