name: OpenCode Review Fix

on:
  issue_comment:
    types: [created]

jobs:
  opencode-review-fix:
    if: |
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/opencode-review-fix') &&
      (
        github.event.comment.author_association == 'OWNER' ||
        github.event.comment.author_association == 'MEMBER' ||
        github.event.comment.author_association == 'COLLABORATOR'
      )
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.issue.number }}
      cancel-in-progress: true
    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: read
      checks: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25.2'
          cache: true

      - name: Install OpenCode CLI
        run: curl -fsSL https://opencode.ai/install | bash
        env:
          VERSION: 0.15.3

      - name: Checkout PR Branch
        run: gh pr checkout ${{ github.event.issue.number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run OpenCode Review Fix
        run: |
          export XAI_API_KEY=${{ secrets.XAI_API_KEY }}
          PROMPT="Fix all review issues in this PR systematically.

          Protocol:
          1. Use 'gh pr view ${{ github.event.issue.number }} --comments' to read all review comments
          2. Use 'gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}/reviews' for structured data
          3. Fix each issue one at a time with validation after each fix
          4. Run 'go mod tidy && go build ./... && make fmt && make lint && make test' after each fix
          5. Commit and push changes when all issues are resolved

          Requirements:
          - Fix issues from CodeRabbit, OpenCode, and other reviewers
          - Maintain or improve code coverage
          - Follow Go best practices
          - No new linting issues

          Current PR: #${{ github.event.issue.number }}
          Repository: ${{ github.repository }}"

          opencode run --model xai/grok-code-free "$PROMPT"
        env:
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post-OpenCode Go Validation
        run: |
          echo "üîç Running Go-specific validation after OpenCode's changes..."

          echo "üì¶ Fixing dependencies..."
          go mod tidy

          echo "üî® Testing compilation..."
          go build ./...

          echo "üß™ Running tests..."
          make test

          echo "‚úÖ All Go validations passed"

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.3.1
          args: --timeout=5m
